{"version":3,"sources":["webpack:///./src/components/introduction.jsx","webpack:///./src/utils/helper.js","webpack:///./src/pages/index.jsx"],"names":["Introduciton","style","display","href","getPublishYearOfPost","post","String","Date","node","frontmatter","date","getFullYear","monthNames","renderPost","d","month","day","title","fields","slug","dateOfPublication","getMonth","slice","getDate","length","key","marginBottom","rhythm","boxShadow","to","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","postsIndexedByYears","posts","uniqueYearsSet","Set","map","add","Array","from","i","year","push","indexPostsByYear","allMarkdownRemark","edges","years","Object","keys","sort","reverse","align","postsOfThisYear","Fragment"],"mappings":"uQAoDeA,EA9CM,WACT,OAuBV,OACE,yBACEC,MAAO,CACLC,QAAS,SAGX,iDAEE,6BACA,6BAHF,kCAIE,uBAAGC,KAAK,yBAAR,UAJF,wBAKE,6BACA,6BANF,0EAQE,6BARF,0L,wBCpCAC,G,8BAAuB,SAACC,GAAD,OAC3BC,OAAO,IAAIC,KAAKF,EAAKG,KAAKC,YAAYC,MAAMC,iBAExCC,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YCNIC,EAAa,SAACL,GAClB,IDQ2BM,EACrBJ,EACAK,EACAC,ECXAC,EAAQT,EAAKC,YAAYQ,OAAST,EAAKU,OAAOC,KAC9CC,GDOqBN,ECPYN,EAAKC,YAAYC,KDQlDA,EAAO,IAAIH,KAAKO,GAChBC,EAAQH,EAAWF,EAAKW,YAAYC,MAAM,EAAG,GAE7B,KADhBN,EAAMV,OAAOI,EAAKa,YACbC,OAAkBT,EAAtB,KAAgCC,EAAWD,EAA3C,IAAoDC,GCV3D,OACE,6BAASS,IAAKjB,EAAKU,OAAOC,MACxB,wBACElB,MAAO,CACLyB,aAAcC,YAAO,EAAI,KAG3B,8BAAOP,EAAP,QACA,kBAAC,OAAD,CAAMnB,MAAO,CAAE2B,UAAW,QAAUC,GAAIrB,EAAKU,OAAOC,MACjDF,MAgCEa,GAFEC,UAxBG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAanB,MACnCoB,EDJwB,SAACC,GAC/B,IAAMD,EAAsB,GACtBE,EAAiB,IAAIC,IAY3B,OAXAF,EAAMG,KAAI,SAACpC,GAAD,OAAUkC,EAAeG,IAAItC,EAAqBC,OACnCsC,MAAMC,KAAKL,GACnBE,KAAI,SAACI,GAEpB,OADAR,EAAoB,GAAGQ,GAAO,GACvB,QAETP,EAAMG,KAAI,SAACpC,GACT,IAAMyC,EAAO1C,EAAqBC,GAElC,OADAgC,EAAoB,GAAGS,GAAQC,KAAK1C,GAC7B,QAEFgC,ECVqBW,CAAiBhB,EAAKiB,kBAAkBC,OAC9DC,EAAQC,OAAOC,KAAKhB,GAAqBiB,OAAOC,UACtD,OACE,kBAAC,IAAD,CAAQtB,SAAUA,EAAUhB,MAAOiB,GACjC,kBAAC,IAAD,CAAKjB,MAAM,cACX,kBAAC,EAAD,MACA,wBAAIuC,MAAM,UAAV,cACCL,EAAMV,KAAI,SAACK,GACV,IAAMW,EAAkBpB,EAAoBS,GAC5C,OACE,kBAAC,IAAMY,SAAP,KACE,4BAAKZ,GACJW,EAAgBhB,KAAI,YAAe,IAAZjC,EAAW,EAAXA,KACtB,OAAOK,EAAWL,YAWV,e","file":"component---src-pages-index-jsx-9d107b939fe96916a2bd.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nconst Introduciton = () => {\n  const data = useStaticQuery(graphql`\n    query IntroductionQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <div\n      style={{\n        display: 'flex'\n      }}\n    >\n      <p>\n        Hi, I am Abhishek !\n        <br />\n        <br />I live in Bangalore and work at\n        <a href=\"https://www.gojek.io/\"> Gojek</a> as Product Engineer.\n        <br />\n        <br />I am passionate about programming, writing, books, ideas and\n        knowledge.\n        <br />I love to read a lot to gather ideas and thoughts around subjects\n        I didn't know about. I am very active on Goodreads, where I track what I\n        am reading and what will be my next read.\n      </p>\n    </div>\n  );\n};\n\nexport default Introduciton;\n","const getPublishYearOfPost = (post) =>\n  String(new Date(post.node.frontmatter.date).getFullYear());\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\nexport const getShortDate = (d) => {\n  const date = new Date(d);\n  const month = monthNames[date.getMonth()].slice(0, 3);\n  const day = String(date.getDate());\n  return day.length === 1 ? `${month} 0${day}` : `${month} ${day}`;\n};\n\nexport const indexPostsByYear = (posts) => {\n  const postsIndexedByYears = {};\n  const uniqueYearsSet = new Set();\n  posts.map((post) => uniqueYearsSet.add(getPublishYearOfPost(post)));\n  const uniqueYearsArray = Array.from(uniqueYearsSet);\n  uniqueYearsArray.map((i) => {\n    postsIndexedByYears[`${i}`] = [];\n    return null;\n  });\n  posts.map((post) => {\n    const year = getPublishYearOfPost(post);\n    postsIndexedByYears[`${year}`].push(post);\n    return null;\n  });\n  return postsIndexedByYears;\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Introduction from '../components/introduction';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport { getShortDate, indexPostsByYear } from '../utils/helper';\n\nconst renderPost = (node) => {\n  const title = node.frontmatter.title || node.fields.slug;\n  const dateOfPublication = getShortDate(node.frontmatter.date);\n  return (\n    <article key={node.fields.slug}>\n      <li\n        style={{\n          marginBottom: rhythm(1 / 4)\n        }}\n      >\n        <span>{dateOfPublication} >> </span>\n        <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n          {title}\n        </Link>\n      </li>\n    </article>\n  );\n};\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const postsIndexedByYears = indexPostsByYear(data.allMarkdownRemark.edges);\n  const years = Object.keys(postsIndexedByYears).sort().reverse();\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Introduction />\n      <h3 align=\"center\">Blog posts</h3>\n      {years.map((year) => {\n        const postsOfThisYear = postsIndexedByYears[year];\n        return (\n          <React.Fragment>\n            <h3>{year}</h3>\n            {postsOfThisYear.map(({ node }) => {\n              return renderPost(node);\n            })}\n          </React.Fragment>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}